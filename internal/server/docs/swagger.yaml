basePath: /api/v1
definitions:
  api.BadRequestError:
    properties:
      detail:
        additionalProperties:
          type: string
        example:
          message: Error message
        type: object
      error:
        example: BAD_REQUEST
        type: string
    type: object
  api.ConflictError:
    properties:
      detail:
        additionalProperties:
          type: string
        example:
          message: Error message
        type: object
      error:
        example: CONFLICT
        type: string
    type: object
  api.ForbiddenError:
    properties:
      detail:
        additionalProperties:
          type: string
        example:
          message: Error message
        type: object
      error:
        example: FORBIDDEN
        type: string
    type: object
  api.InternalServerError:
    properties:
      detail:
        additionalProperties:
          type: string
        example:
          message: Error message
        type: object
      error:
        example: INTERNAL_SERVER_ERROR
        type: string
    type: object
  api.NotFoundError:
    properties:
      detail:
        additionalProperties:
          type: string
        example:
          message: Error message
        type: object
      error:
        example: NOT_FOUND
        type: string
    type: object
  api.UnauthorizedError:
    properties:
      detail:
        additionalProperties:
          type: string
        example:
          message: Error message
        type: object
      error:
        example: UNAUTHORIZED
        type: string
    type: object
  api.ValidationError:
    properties:
      detail:
        items:
          $ref: '#/definitions/api.ValidationErrorDetail'
        type: array
      error:
        example: VALIDATION_ERROR
        type: string
    type: object
  api.ValidationErrorDetail:
    properties:
      error:
        example: required
        type: string
      field:
        example: username
        type: string
    type: object
  health.HealthStatus:
    properties:
      rdb:
        type: boolean
    type: object
  link.CreateLinkBody:
    properties:
      original_url:
        type: string
      slug:
        maxLength: 20
        minLength: 3
        type: string
      ttl:
        maximum: 31536000
        minimum: 0
        type: integer
    required:
    - original_url
    type: object
  models.Link:
    properties:
      domain:
        type: string
      original_url:
        type: string
      slug:
        type: string
      ttl:
        type: integer
      url:
        type: string
    type: object
info:
  contact: {}
  description: URL Shortener API
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Shurl API
  version: "1.0"
paths:
  /{slug}:
    get:
      description: Redirect from domain/slug to the original URL
      parameters:
      - description: Slug to redirect from
        in: path
        name: slug
        required: true
        type: string
      responses:
        "307":
          description: Temporary Redirect
        "404":
          description: Link not found
          schema:
            $ref: '#/definitions/api.NotFoundError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.InternalServerError'
      summary: Redirect to the original URL
      tags:
      - link
  /healthz:
    get:
      description: Get the health status of the server
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/health.HealthStatus'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/health.HealthStatus'
      summary: Get health status
      tags:
      - health
  /links:
    post:
      description: |-
        Create a link from a slug to the original URL.
        If no slug is provided, a random one will be generated.
        The ttl is required. 0 means no expiration, otherwise it's the number of seconds until expiration.
        The ttl can't be greater than 1 year (31536000 seconds).
        The API Key may limit the ttl.
      parameters:
      - description: Slug is optional
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/link.CreateLinkBody'
      - description: API Key, leave empty for public access (if enabled in the server)
        in: header
        name: X-API-Key
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Link'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/api.BadRequestError'
        "401":
          description: Missing API Key
          schema:
            $ref: '#/definitions/api.UnauthorizedError'
        "403":
          description: Invalid API Key
          schema:
            $ref: '#/definitions/api.ForbiddenError'
        "409":
          description: Duplicated link
          schema:
            $ref: '#/definitions/api.ConflictError'
        "422":
          description: Validation error
          schema:
            $ref: '#/definitions/api.ValidationError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.InternalServerError'
      security:
      - ApiKeyAuth: []
      summary: Create a link
      tags:
      - link
swagger: "2.0"
